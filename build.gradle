plugins {
	id 'fabric-loom' version '1.1-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	mavenCentral()
	maven { url 'https://maven.terraformersmc.com/releases/' }
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modCompileOnly "com.terraformersmc:modmenu:${project.mod_menu_version}"
	
	implementation 'org.apache.commons:commons-text:1.10.0'
	include 'org.apache.commons:commons-text:1.10.0'
}

group = project.group + "." + project.archives_base_name
archivesBaseName = project.archives_base_name + '-' + project.minecraft_version
version = project.mod_version

if (project.dev == "true") {
	project.version += "." + Long.toString(new Date().getTime())
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

tasks.publish.dependsOn build
publishing {
	publications {
		mavenJava(MavenPublication) {
			artifactId project.archivesBaseName
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		maven {
			url "./maven"
		}
	}
}
