name: "Build Release"
on: 
  workflow_dispatch:
  release:
    types: [published]
jobs:
  getLanguages:
    runs-on: [ubuntu-latest]
    steps:
      - { uses: actions/checkout@v3, with: { fetch-depth: 0 } }
      - uses: crowdin/github-action@master
        with:
          upload_sources: true

          download_translations: true
          # skip_untranslated_strings: true

          skip_untranslated_strings: true

          source: src/main/resources/assets/wiki/lang/en_us.json
          translation: src/main/resources/assets/wiki/lang/%locale%.json
          # locale/language mappings must be added in Crowdin
          # see https://github.com/jackassmc/minecraft-crowdin-languages

          crowdin_branch_name: main
          localization_branch_name: ${{ steps.branch.outputs.branch }}

          create_pull_request: false
          project_id: ${{ vars.CROWDIN_ID }}
          token: ${{ secrets.CROWDIN_TOKEN }}
          skip_ref_checkout: true
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}

      - name: Commit to the repo
        run: |
          git config --global user.name "JulianWww/generator"
          git config --global user.email "generator[bot]@JulianWww.github.io"
          git pull
          git add .
          git commit -m 'got crowdin languages' || true
          git push

  translate:
    runs-on: [self-hosted]
    timeout-minutes: 54600
    needs: getLanguages
    steps:
      - { uses: actions/checkout@v3, with: { fetch-depth: 0 } }
      - name: Install requirements
        run: |
          python3 -m pip install --upgrade pip setuptools wheel
          python3 -m pip install deep_translator pysocks
      - name: Build remaining Translations
        run: |
          wget https://raw.githubusercontent.com/JulianWww/Minecraft-Generator-Utils/main/crowdin/translate.py
          python3 translate.py ${{ steps.all.outputs.archives_base_name }} en_us en
      - name: Commit to the repo
        run: |
          git config --global user.name "JulianWww/generator"
          git config --global user.email "generator[bot]@JulianWww.github.io"
          git pull
          git add .
          git commit -m 'built remaining languages with google' || true
          git push

  build:
    runs-on: [ubuntu-latest]
    needs: translate
    steps:
      - { uses: actions/checkout@v3, with: { fetch-depth: 0 } }
      - {
          uses: madhead/read-java-properties@latest,
          id: all,
          with: {
            file: gradle.properties,
            all: true
          }
        }
      - name: "Get Branch"
        id: branch
        run: |
          echo "branch=$(echo ${GITHUB_REF#refs/heads/})" >>$GITHUB_OUTPUT
      - {
          name: "Set up JDK 17",
          uses: actions/setup-java@v2,
          with: { distribution: "adopt", java-version: "17" },
        }
      - name: Install requirements
        run: |
          python3 -m pip install --upgrade pip setuptools wheel
          python3 -m pip install wget numpy opencv-python mc-generator-utils xmltodict
      - {
          name: "Build with Gradle",
          id: build,
          run: "chmod +x gradlew && ./gradlew build publish && rm build/libs/*sources.jar",
        }
      - name: "List verstion"
        id: versioning
        run: |
          echo "version=$(ls build/libs)" >>$GITHUB_OUTPUT
          echo "date=$(date +%s)" >>$GITHUB_OUTPUT

#      - name: "Publish maven to wandhoven.ddns.net"
#        uses: appleboy/scp-action@master
#        with:
#          host: "wandhoven.ddns.net"
#          username: ${{ secrets.SCP_MAVEN_USERNAME }}
#          key: ${{ secrets.SCP_MAVENKEY }}
#          source: "maven/"
#          target: "/media/B/html/"
#      - name: "Upload to CurseForge"
#        uses: itsmeow/curseforge-upload@v3
#        with:
#          file_path: "build/libs/${{steps.versioning.outputs.version}}"
#          game_endpoint: "minecraft"
#          relations: "fabric-api:requiredDependency"
#          game_versions: "Minecraft ${{ steps.all.outputs.minecraft_version_short }}:${{ steps.all.outputs.minecraft_version }},Java 17,Fabric"
#          project_id: "841454"
#          token: "${{ secrets.CF_API_TOKEN }}"
#          release_type: "${{ steps.all.outputs.type }}"
      - name: "update README.md setup instructions"
        id: readme
        run: |
          python3 -c 'import mc_generator_utils as mc; mc.addGradleSetupInstructions("README.md", "https://wandhoven.ddns.net/maven/", "${{ steps.all.outputs.maven_group }}.${{ steps.all.outputs.archives_base_name }}", "${{ steps.all.outputs.archives_base_name }}-${{ steps.all.outputs.minecraft_version }}")'

      - name: Commit to the repo
        run: |
          git config --global user.name "JulianWww/generator"
          git config --global user.email "generator[bot]@JulianWww.github.io"
          git pull
          git checkout -b "Updated-Setup-Instructions-for-the-${{ steps.versioning.outputs.date }}"
          git add .
          # Force the build to succeed, even if no files were changed 
          git commit -m 'updated setup readme' || true
          git push origin "Updated-Setup-Instructions-for-the-${{ steps.versioning.outputs.date }}"

      - name: Create Pull request
        uses: devops-infra/action-pull-request@v0.5.5
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          source_branch: "Updated-Setup-Instructions-for-the-${{ steps.versioning.outputs.date }}"
          target_branch: "${{ steps.branch.outputs.branch }}"
          title: "Updated Setup Instructions for ${{ steps.versioning.outputs.version }}"
          body: "automaticall updated setup instructions"
          reviewer: JulianWww
          assignee: JulianWww
          label: documentation
          get_diff: true
          ignore_users: "dependabot"
          allow_no_diff: false
